---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: keyhubclientapplications.keyhub.jet.crossplane.io
spec:
  group: keyhub.jet.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - keyhubjet
    kind: KeyHubClientApplication
    listKind: KeyHubClientApplicationList
    plural: keyhubclientapplications
    singular: keyhubclientapplication
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha2
    schema:
      openAPIV3Schema:
        description: KeyHubClientApplication is the Schema for the KeyHubClientApplications
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: KeyHubClientApplicationSpec defines the desired state of
              KeyHubClientApplication
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  attribute:
                    description: The additional attributes which can be retrieved
                      through userinfo
                    items:
                      properties:
                        name:
                          description: The name of the attribute
                          type: string
                        script:
                          description: The script defines the body of a `function
                            (account, groups) { <SCRIPT> }` function, and is written
                            in JavaScript using the ECMAScript 5 standard
                          type: string
                      required:
                      - name
                      - script
                      type: object
                    type: array
                  callbackUri:
                    description: The client is a code and implicit client
                    type: string
                  clientCertificate:
                    type: string
                  confidential:
                    description: A confidential (or trusted) OAUTH2 client is able
                      to keep its credentials a secret
                    type: boolean
                  idTokenClaims:
                    description: A space-separated list of claims. These claims are
                      added to the 'id_token', even if the client does not explicitly
                      request them to be added
                    type: string
                  initiateLoginUri:
                    description: The URI within the application where a third party
                      login can be started.
                    type: string
                  isServer2Server:
                    description: The client is a code and implicit client
                    type: boolean
                  isSso:
                    description: If set the client application is a Single Sign On
                      application
                    type: boolean
                  metadata:
                    description: The metadata of the SAML application, use if metadata_url
                      is not available
                    type: string
                  metadataUrl:
                    description: The URL to retrieve the SAML metadata from
                    type: string
                  name:
                    description: The name of the created client application
                    type: string
                  owner:
                    description: The UUID of the group that is owner of the client
                    type: string
                  scopes:
                    description: The Allowed scopes for the client application. For
                      SSO applications this defaults to `profile`
                    items:
                      type: string
                    type: array
                  segments:
                    type: string
                  showLandingpage:
                    description: Displays a landing page immediately after login and
                      before redirecting to the SSO application
                    type: boolean
                  subjectFormat:
                    description: 'Topicus KeyHub can deliver the subject in three
                      formats: Primary identifier, UPN and username.'
                    type: string
                  technicalAdministrator:
                    description: The UUID of the group that is technical administrator
                      of the client, default to Owner
                    type: string
                  type:
                    description: 'The type of the client application. Possible values:
                      `OAUTH2` (default), `LDAP`, `SAML2`'
                    type: string
                  url:
                    type: string
                  usedForProvisioning:
                    type: boolean
                required:
                - name
                - owner
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: KeyHubClientApplicationStatus defines the observed state
              of KeyHubClientApplication.
            properties:
              atProvider:
                properties:
                  binddn:
                    type: string
                  clientid:
                    type: string
                  id:
                    type: string
                  uuid:
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
