---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: keyhubgroups.keyhub.jet.crossplane.io
spec:
  group: keyhub.jet.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - keyhubjet
    kind: KeyHubGroup
    listKind: KeyHubGroupList
    plural: keyhubgroups
    singular: keyhubgroup
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha2
    schema:
      openAPIV3Schema:
        description: KeyHubGroup is the Schema for the KeyHubGroups API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: KeyHubGroupSpec defines the desired state of KeyHubGroup
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  applicationAdministration:
                    description: Group can be assign as managing group of an application
                    type: boolean
                  auditMonths:
                    description: 'List of Months the group must be audited. Possible
                      Values: `JANUARY`,`FEBRUARY`,`MARCH`,`APRIL`,`MAY`,`JUNE`,`JULY`,`AUGUST`,`SEPTEMBER`,`OCTOBER`,`NOVEMBER`,`DECEMBER`'
                    items:
                      type: string
                    type: array
                  auditingAuthGroupuuid:
                    description: The UUID of the group to set as authorizing group
                      for audits
                    type: string
                  auditor:
                    type: boolean
                  client:
                    description: Grant clients permissions on the create group, (client
                      used by terraform provider requires global `GROUPS_GRANT_PERMISSIONS_AFTER_CREATE`
                      permission)
                    items:
                      properties:
                        permissions:
                          description: 'List of permissions to grant the client application.
                            Possible values: `GROUP_FULL_VAULT_ACCESS`, `GROUP_READ_CONTENTS`,
                            `GROUP_SET_AUTHORIZATION`'
                          items:
                            type: string
                          type: array
                        uuid:
                          description: The UUID of the client application
                          type: string
                      required:
                      - permissions
                      - uuid
                      type: object
                    type: array
                  description:
                    description: The description of the group
                    type: string
                  extendedAccess:
                    description: 'Defines extended access. Possible values: `NOT_ALLOWED`
                      (default), `ONE_WEEK`, `TWO_WEEKS`'
                    type: string
                  hideAuditTrail:
                    description: Don't show audit trail in KeyHub Dashboard
                    type: boolean
                  member:
                    description: At least one manager should be defined
                    items:
                      properties:
                        rights:
                          description: 'The rights of the member. Possible values:
                            `MANAGER` (default), `NORMAL`'
                          type: string
                        uuid:
                          description: The uuid of the keyhub account to add as member
                          type: string
                      required:
                      - uuid
                      type: object
                    type: array
                  membershipAuthGroupuuid:
                    description: The UUID of the group to set as authorizing group
                      for membership
                    type: string
                  name:
                    description: The Name field of the group
                    type: string
                  privateGroup:
                    description: Set group to invite only
                    type: boolean
                  provisioningAuthGroupuuid:
                    description: The UUID of the group to set as authorizing group
                      for provisioning
                    type: string
                  recordTrail:
                    description: Require a reason before activating a group
                    type: boolean
                  rotatingPasswordRequired:
                    description: Required rotating password for members
                    type: boolean
                  singleManaged:
                    type: boolean
                  vaultRecovery:
                    description: 'Defines recovery strategy. Possible Values: `FULL`
                      (default), `RECOVERY_KEY_ONLY`, `NONE`'
                    type: string
                required:
                - member
                - name
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: KeyHubGroupStatus defines the observed state of KeyHubGroup.
            properties:
              atProvider:
                properties:
                  id:
                    type: string
                  uuid:
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
